{"version":3,"file":"posts.js.map","sources":["ng://posts/lib/posts.component.ts","ng://posts/lib/models/requests/get-posts-request.ts","ng://posts/lib/models/requests/create-post-request.ts","ng://posts/lib/models/requests/delete-post-request.ts","ng://posts/lib/models/requests/get-post-request.ts","ng://posts/lib/models/requests/update-post-request.ts","ng://posts/lib/services/posts.service.ts","ng://posts/lib/top/top.component.ts","ng://posts/lib/home/home.component.ts","ng://posts/lib/post-item/create/create.component.ts","ng://posts/lib/post-item/delete/delete.component.ts","ng://posts/lib/post-item/post-item.component.ts","ng://posts/lib/post-item/update/update.component.ts","ng://posts/lib/posts-routing.module.ts","ng://posts/lib/posts.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'posts',\n  templateUrl: './posts.component.html',\n  styles: []\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The get posts request model.\r\n * */\r\nexport class GetPostsRequest {\r\n\r\n  /**\r\n  *  Initializes a new instance of the GetPostsRequest class.\r\n  * @param max The max items to retrieve.\r\n  */\r\n  constructor(public max: number = 9999) { }\r\n}\r\n\r\n/**\r\n *  The get posts response model.\r\n * */\r\nexport class GetPostsResponse {\r\n\r\n  /**\r\n   *  Initializes a new instance of the GetPostsResponse class.\r\n   * @param items The retrieved post items.\r\n   */\r\n  constructor(public items: PostItem[]) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The create post request model.\r\n * */\r\nexport class CreatePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the CreatePostRequest class.\r\n   * @param postItem The post item to be created.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n\r\n/**\r\n *  The create post response model.\r\n * */\r\nexport class CreatePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the CreatePostResponse class.\r\n   * @param id The id of newly created post item.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n","/**\r\n *  The delete post request model.\r\n * */\r\nexport class DeletePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the DeletePostRequest class.\r\n   * @param id The id of the post item to be deleted.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n\r\n/**\r\n *  The delete post response model.\r\n * */\r\nexport class DeletePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the DeletePostResponse class.\r\n   * @param id The id of the deleted post item.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The get post request model.\r\n * */\r\nexport class GetPostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the GetPostRequest class.\r\n   * @param id The id of the post item to be retrieved.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n\r\n/**\r\n *  The get post response model.\r\n * */\r\nexport class GetPostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the GetPostResponse class.\r\n   * @param item The retrieved post item.\r\n   */\r\n  constructor(public item: PostItem) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The update post request model.\r\n * */\r\nexport class UpdatePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the UpdatePostRequest class.\r\n   * @param postItem The post item to be updated.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n\r\n/**\r\n *  The delete post response model.\r\n * */\r\nexport class UpdatePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the DeletePostResponse class.\r\n   * @param postItem The updated post item.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { PostItem } from \"../models/interfaces/post-item\";\r\nimport { CreatePostRequest, CreatePostResponse } from \"../models/requests/create-post-request\";\r\nimport { DeletePostRequest, DeletePostResponse } from \"../models/requests/delete-post-request\";\r\nimport { GetPostRequest, GetPostResponse } from \"../models/requests/get-post-request\";\r\nimport { GetPostsRequest, GetPostsResponse } from \"../models/requests/get-posts-request\";\r\nimport { UpdatePostRequest, UpdatePostResponse } from \"../models/requests/update-post-request\";\r\n\n@Injectable()\nexport class PostsService {\n\n  // The API base url.\n  private actionUrl: string;\n\n  constructor(private _httpClient: HttpClient) {\n    // Set the API url.\n    this.actionUrl = 'https://jsonplaceholder.typicode.com';\n  }\n\n  /**\r\n   * Get all post items.\r\n   */\n  public getPosts = (request: GetPostsRequest): Observable<GetPostsResponse> => {\n\n    return this._httpClient.get(`${this.actionUrl}/posts`).pipe(\n      map((items: PostItem[]) => {\r\n\r\n        // Create and return a response with the returned items.\r\n        return new GetPostsResponse(items.slice(0, request.max));\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\n  }\n\n\n  /**\n   *  Get a specified post item.\n   * @param request The request data.\n   */\n  public getPost = (request: GetPostRequest): Observable<GetPostResponse> => {\n\n    // Invoke a get request.\n    return this._httpClient.get(`${this.actionUrl}/posts/${request.id}`).pipe(\n      map((item: PostItem) => {\r\n\r\n        // Create and return response with the returned item.\r\n        return new GetPostResponse(item);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\n  }\n\n  /**\r\n   * Create a new  post item.\r\n  * @param request The request data.\r\n   */\r\n  create(request: CreatePostRequest): Observable<CreatePostResponse> {\r\n\r\n    // Invoke a post request.\n    return this._httpClient.post(`${this.actionUrl}/posts/`, request).pipe(\n      map((response: any) => {\r\n        // Create and return response with the created item id.\r\n        return new CreatePostResponse(response.id);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\r\n  }\n\n\n  /**\r\n * Updates a post item.\r\n* @param request The request data.\r\n */\r\n  update(request: UpdatePostRequest): Observable<UpdatePostResponse> {\r\n\r\n    // Invoke a put request.\n    return this._httpClient.put(`${this.actionUrl}/posts/${request.postItem.id}`, request.postItem).pipe(\n      map((response: PostItem) => {\r\n        // Create and return response with the created item id.\r\n        return new UpdatePostResponse(response);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\r\n  }\n\r\n  /**\r\n   * Deletes a post item.\r\n  * @param request The request data.\r\n   */\r\n  delete(request: DeletePostRequest): Observable<DeletePostResponse> {\r\n\r\n    // Invoke a delete request.\r\n    return from(fetch(`${this.actionUrl}/posts/${request.id}`, {\r\n      method: 'DELETE'\r\n    }))\r\n      .pipe(\n        map((response) => {\r\n          console.log(response);\r\n          // Create and return response with the returned item.\r\n          return new DeletePostResponse(request.id);\r\n        }),\n        catchError(err => {\r\n          return observableThrowError(err);\r\n        }));\r\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { GetPostsRequest } from '../models/requests/get-posts-request';\r\nimport { PostsService } from '../services/posts.service';\r\n\n@Component({\n  selector: 'posts-top',\n  templateUrl: './top.component.html'\n})\nexport class TopComponent implements OnInit {\n\n  // The post items to show.\n  postItems: PostItem[];\n\n  constructor(private postsService: PostsService) { }\n\n\n  ngOnInit() {\r\n\n    // Create get posts request.\n    const request = new GetPostsRequest(10);\r\n\r\n    // Call the service and retrieve posts.\r\n    this.postsService.getPosts(request)\n      .subscribe((response) => {\n\n        // Set the items returned in the response.\n        this.postItems = response.items;\n      },\n        (error) => {\n\n          console.log(`Invoking get posts top request encountered  an error. ${error}.`);\n        },\n        () => {\n          console.log(`Completed invoking get posts top request.`);\n        });\r\n  }\r\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from '../services/posts.service';\r\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { GetPostsRequest } from '../models/requests/get-posts-request';\r\n\n@Component({\n  selector: 'posts-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  // Loading indication.\n  loading: boolean;\n\n  // The post items to show.\n  postItems: PostItem[];\n\n  constructor(private postsService: PostsService) { }\n\n\n  ngOnInit() {\r\n\n    // Create get posts request.\n    const request = new GetPostsRequest(50);\r\n\r\n    // Set loading state.\n    this.loading = true;\r\n\r\n    // Call the service and retrieve posts.\r\n    this.postsService.getPosts(request)\n      .subscribe((response) => {\n\n        // Set the items returned in the response.\n        this.postItems = response.items;\n      },\n        (error) => {\n\n          console.log(`Invoking get posts request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set loading state.\n          this.loading = false;\n\n          console.log(`Completed invoking get posts request.`);\n        });\r\n  }\r\n\r\n  /**\r\n  * Create the specified post item on view.\r\n  * @param event The triggered event containing the post item to create.\r\n  */\r\n  create(event: PostItem) {\r\n    // Add the item to top of the posts collection.\r\n    this.postItems.unshift(event);\r\n  }\r\n\r\n\r\n  /**\r\n  * Update the specified post item on view.\r\n  * @param event The triggered event containing the post item to update.\r\n  */\r\n  update(event: PostItem) {\r\n    // Update the item in the posts collection.    \r\n    this.postItems[this.postItems.findIndex(x => x.id === event.id)] = event;\r\n  }\r\n\r\n  /**\r\n   * Delete the specified post item from view.\r\n   * @param event The triggered event containing the post item to delete.\r\n   */\r\n  delete(event: PostItem) {\r\n    // Remove the item from the posts collection.\r\n    this.postItems.splice(this.postItems.indexOf(event), 1);\r\n  }\r\n\r\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { CreatePostRequest } from '../../models/requests/create-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-create',\n  templateUrl: './create.component.html'\n})\nexport class CreateComponent {\n\n  // The post item model.\n  model = {} as PostItem;\n\n  // An event emitter for post creation notification.\n  @Output()\r\n  created: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  creating = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Create the post item.\n   * */\n  public createItem() {\n\n    // Set the processing state.\r\n    this.creating = true;\n\n    // Create the request.\n    const request = new CreatePostRequest(this.model);\n\n    // Call the service.\n    this.postsService.create(request)\n      .subscribe((response) => {\n        // Check for successful response.        \n        if (response.id > 0) {\n\n          console.log(`Invoking create post item request completed sucessfully.`);\n\n          // Emit the created event.\n          this.created.emit(this.model);\n        }\n        else {\n          console.log(`Invoking create post item request completed with error.`);\n        }\n      },\n        (error) => {\n          console.log(`Invoking create post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.creating = false;\n\n          console.log(`Completed Invoking create post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open creation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  open(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Modal approved.\r\n      console.log(`Creation modal approved with ${result}.`)\r\n\r\n    }, (reason) => {\r\n      // Modal dismissed.\r\n      console.log(`Creation modal closed with ${reason}.`)\r\n\r\n      // Do nothing.\r\n    });\r\n  }\n\n  /**\n   * Submit the create new post item form.\n   * */\n  onSubmit() {\r\n\r\n    // Create post item.\r\n    this.createItem();\n\r\n    // Close open modals.\r\n    this.modalService.dismissAll();\n\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { DeletePostRequest } from '../../models/requests/delete-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-delete',\n  templateUrl: './delete.component.html'\n})\nexport class DeleteComponent {\n\n  // The post item model.\n  @Input() model: PostItem;\n\n  // An event emitter for post deletion notification.\n  @Output()\r\n  deleted: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  deleting = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Delete the post item.\n   * */\n  public deleteItem() {\n    \n    // Create the request.\n    const request = new DeletePostRequest(this.model.id);\n\n    // Call the service.\n    this.postsService.delete(request)\n      .subscribe((response) => {\n        // Check for successful response.\n        if (response.id === this.model.id) {\n\n          console.log(`Invoking delete post item request completed sucessfully.`);\n\n          // Emit the deleted event.\n          this.deleted.emit(this.model);\n        }\n        else {\n          console.log(`Invoking delete post item request completed with error.`);\n        }\n\n      },\n        (error) => {\n        \n\n          console.log(`Invoking delete post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.deleting = false;\n\n          console.log(`Completed Invoking delete post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open deletion confirmation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  confirm(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Confirmation approved.\r\n      console.log(`Confirmation modal approved with ${result}.`)\r\n\r\n      // Set the processing state.\r\n      this.deleting = true;\r\n\r\n      // Delete post item.\r\n      this.deleteItem();\r\n\r\n    }, (reason) => {\r\n        // Confirmation dismissed.\r\n        console.log(`Confirmation modal closed with ${reason}.`)\r\n\r\n        // Do nothing.\r\n    });\r\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { PostsService } from '../services/posts.service';\r\nimport { DeletePostRequest } from '../models/requests/delete-post-request';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\n@Component({\n  selector: 'post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.scss']\n})\nexport class PostItemComponent {\n\n  // The post item model.\n  @Input() model: PostItem;\n\n  // An event emitter for post deletion notification.\n  @Output()\r\n  delete: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  deleting = false;\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Delete the post item.\n   * */\n  public deleteItem() {\n    \n    // Create the request.\n    const request = new DeletePostRequest(this.model.id);\n\n    // Call the service.\n    this.postsService.delete(request)\n      .subscribe((response) => {\n        // Check for successful response.\n        if (response.id === this.model.id) {\n\n          console.log(`Invoking delete post item request completed sucessfully.`);\n          this.delete.emit(this.model);\n        }\n        else {\n          console.log(`Invoking delete post item request completed with error.`);\n        }\n\n      },\n        (error) => {\n        \n\n          console.log(`Invoking delete post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          console.log(`Completed Invoking delete post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open deletion confirmation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  confirm(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Confirmation approved.\r\n      console.log(`Confirmation modal approved with ${result}.`)\r\n\r\n      this.deleting = true;\r\n      // Delete post item.\r\n      this.deleteItem();\r\n\r\n    }, (reason) => {\r\n\r\n        // Confirmation dismissed.\r\n        console.log(`Confirmation modal closed with ${reason}.`)\r\n\r\n        // Do nothing.\r\n    });\r\n  }\n}\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { UpdatePostRequest } from '../../models/requests/update-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-update',\n  templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n\n  // The post item model.\n  @Input() postItem: PostItem;\n\n  model = {} as PostItem;\n\n  // An event emitter for post creation notification.\n  @Output()\r\n  updated: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  updating = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\r\n  ngOnInit(): void {\r\n    this.model = { ...this.postItem};\r\n    }\r\n\n  /**\n   * Update the post item.\n   * */\n  public updateItem() {\n\n    // Set the processing state.\r\n    this.updating = true;\n\n    // Update the request.\n    const request = new UpdatePostRequest(this.model);\n\n    // Call the service.\n    this.postsService.update(request)\n      .subscribe((response) => {\n        // Check for successful response.        \n        if (response.postItem.id === request.postItem.id) {\n\n          console.log(`Invoking update post item request completed sucessfully.`);\n\n          // Emit the updated event.\n          this.updated.emit(this.model);\n        }\n        else {\n          console.log(`Invoking update post item request completed with error.`);\n        }\n      },\n        (error) => {\n          console.log(`Invoking update post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.updating = false;\n\n          console.log(`Completed Invoking update post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open update dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  open(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Modal approved.\r\n      console.log(`Update modal approved with ${result}.`)\r\n\r\n    }, (reason) => {\r\n      // Modal dismissed.\r\n      console.log(`Update modal closed with ${reason}.`)\r\n\r\n      // Do nothing.\r\n    });\r\n  }\n\n  /**\n   * Submit the update new post item form.\n   * */\n  onSubmit() {\r\n\r\n    // Update post item.\r\n    this.updateItem();\n\r\n    // Close open modals.\r\n    this.modalService.dismissAll();\n\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { PostItemComponent } from './post-item/post-item.component';\r\nimport { PostsComponent } from \"./posts.component\";\r\n\nconst routes: Routes = [\n  {\n    path: 'posts', component: PostsComponent, children: [\n      {path: '', component: HomeComponent},\n      {path: 'home', component: HomeComponent}\n    ]\n  },\n];\n\n@NgModule({\n  imports: [    \n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class PostsRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal, NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreateComponent } from './post-item/create/create.component';\r\nimport { DeleteComponent } from './post-item/delete/delete.component';\r\nimport { PostItemComponent } from './post-item/post-item.component';\r\nimport { UpdateComponent } from './post-item/update/update.component';\r\nimport { PostsRoutingModule } from \"./posts-routing.module\";\r\nimport { PostsComponent } from './posts.component';\r\nimport { PostsService } from './services/posts.service';\r\nimport { TopComponent } from './top/top.component';\r\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    HomeComponent,\n    TopComponent,\n    PostItemComponent,\n    CreateComponent,\n    UpdateComponent,\n    DeleteComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PostsRoutingModule,\n    HttpClientModule,\n    NgbModule.forRoot()\n  ],\n  exports: [\n    PostsComponent,\n    TopComponent],\n  providers: [\n    NgbActiveModal,\n    PostsService\n  ]\n})\nexport class PostsModule { }\n"],"names":["observableThrowError"],"mappings":"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"}
