!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("rxjs/operators"),require("@angular/common"),require("@angular/common/http"),require("@angular/forms"),require("@ng-bootstrap/ng-bootstrap"),require("@angular/core"),require("@angular/router")):"function"==typeof define&&define.amd?define("posts",["exports","rxjs","rxjs/operators","@angular/common","@angular/common/http","@angular/forms","@ng-bootstrap/ng-bootstrap","@angular/core","@angular/router"],e):e(t.posts={},t.rxjs,t.rxjs.operators,t.ng.common,t.ng.common.http,t.ng.forms,t.ngBootstrap,t.ng.core,t.ng.router)}(this,function(t,o,i,e,n,s,r,l,a){"use strict";var c=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:l.Component,args:[{selector:"posts",template:'\x3c!-- Page Content  --\x3e\n<div id="content">\n\n  <router-outlet></router-outlet>\n\n</div>\n'}]}],t.ctorParameters=function(){return[]},t}(),d=function O(t){void 0===t&&(t=9999),this.max=t},p=function j(t){this.items=t},u=function U(t){this.postItem=t},m=function T(t){this.id=t},f=function N(t){this.id=t},g=function D(t){this.id=t},h=function B(t){this.item=t},v=function _(t){this.postItem=t},b=function F(t){this.postItem=t},y=function(){function t(t){var n=this;this._httpClient=t,this.getPosts=function(e){return n._httpClient.get(n.actionUrl+"/posts").pipe(i.map(function(t){return new p(t.slice(0,e.max))}),i.catchError(function(t){return o.throwError(t)}))},this.getPost=function(t){return n._httpClient.get(n.actionUrl+"/posts/"+t.id).pipe(i.map(function(t){return new h(t)}),i.catchError(function(t){return o.throwError(t)}))},this.actionUrl="https://jsonplaceholder.typicode.com"}return t.prototype.create=function(t){return this._httpClient.post(this.actionUrl+"/posts/",t).pipe(i.map(function(t){return new m(t.id)}),i.catchError(function(t){return o.throwError(t)}))},t.prototype.update=function(t){return this._httpClient.put(this.actionUrl+"/posts/"+t.postItem.id,t.postItem).pipe(i.map(function(t){return new b(t)}),i.catchError(function(t){return o.throwError(t)}))},t.prototype["delete"]=function(e){return o.from(fetch(this.actionUrl+"/posts/"+e.id,{method:"DELETE"})).pipe(i.map(function(t){return console.log(t),new g(e.id)}),i.catchError(function(t){return o.throwError(t)}))},t.decorators=[{type:l.Injectable}],t.ctorParameters=function(){return[{type:n.HttpClient}]},t}(),I=function(){function t(t){this.postsService=t}return t.prototype.ngOnInit=function(){var e=this,t=new d(10);this.postsService.getPosts(t).subscribe(function(t){e.postItems=t.items},function(t){console.log("Invoking get posts top request encountered  an error. "+t+".")},function(){console.log("Completed invoking get posts top request.")})},t.decorators=[{type:l.Component,args:[{selector:"posts-top",template:'<section>\n  <div class="container">\n    <div *ngFor="let postItem of postItems">\n      \x3c!-- Post item --\x3e\n      <post-item [model]="postItem"></post-item>\n    </div>\n  </div>\n</section>\n'}]}],t.ctorParameters=function(){return[{type:y}]},t}(),x=function(){function t(t){this.postsService=t}return t.prototype.ngOnInit=function(){var e=this,t=new d(50);this.loading=!0,this.postsService.getPosts(t).subscribe(function(t){e.postItems=t.items},function(t){console.log("Invoking get posts request encountered  an error. "+t+".")},function(){e.loading=!1,console.log("Completed invoking get posts request.")})},t.prototype.create=function(t){this.postItems.unshift(t)},t.prototype.update=function(e){this.postItems[this.postItems.findIndex(function(t){return t.id===e.id})]=e},t.prototype["delete"]=function(t){this.postItems.splice(this.postItems.indexOf(t),1)},t.decorators=[{type:l.Component,args:[{selector:"posts-home",template:'<section>\n  <div class="container">\n    <h2 class="text-center">\n      My Posts\n    </h2>\n\n    \x3c!-- Loading spinner --\x3e\n    <div *ngIf="loading" class="fa fa-spinner fa-spin spinner"></div>\n\n    \x3c!-- Create --\x3e\n    <post-item-create (created)="create($event)"></post-item-create>\n\n    <div *ngFor="let postItem of postItems">\n\n      \x3c!-- Post item --\x3e\n      <post-item [model]="postItem"></post-item>\n\n      \x3c!-- Update --\x3e\n      <post-item-update [postItem]="postItem" (updated)="update($event)"></post-item-update>\n   \n      \x3c!-- Delete --\x3e\n      <post-item-delete [model]="postItem" (deleted)="delete($event)"></post-item-delete>\n\n\n    </div>\n\n\n\n  </div>\n</section>\n',styles:["section{padding:20px;width:100%;height:100%;background-color:#6cd37d;color:#383838}section btn{margin-left:100px}"]}]}],t.ctorParameters=function(){return[{type:y}]},t}(),C=function(){function t(t,e){this.postsService=t,this.modalService=e,this.model={},this.created=new l.EventEmitter,this.creating=!1}return t.prototype.createItem=function(){var e=this;this.creating=!0;var t=new u(this.model);this.postsService.create(t).subscribe(function(t){0<t.id?(console.log("Invoking create post item request completed sucessfully."),e.created.emit(e.model)):console.log("Invoking create post item request completed with error.")},function(t){console.log("Invoking create post item request encountered  an error. "+t+".")},function(){e.creating=!1,console.log("Completed Invoking create post item request.")})},t.prototype.open=function(t){this.modalService.open(t).result.then(function(t){console.log("Creation modal approved with "+t+".")},function(t){console.log("Creation modal closed with "+t+".")})},t.prototype.onSubmit=function(){this.createItem(),this.modalService.dismissAll()},t.decorators=[{type:l.Component,args:[{selector:"post-item-create",template:'<button class="btn btn-success m-3" (click)="open(create)" [disabled]="creating"><i *ngIf="creating" class="fa fa-spinner fa-spin"></i> <i class="fas fa-plus"></i> New</button>\n\n\x3c!-- Create Post Item Modal --\x3e\n<ng-template #create let-modal>\n  <form name="form" #f="ngForm" novalidate (ngSubmit)="onSubmit()">\n\n\n    <div class="modal-header">\n      <h4 class="modal-title" id="confirmation-modal">\n        <i class="far fa-newspaper"></i>\n\n\n        Post Creation\n      </h4>\n      <button type="button" class="close" aria-label="Close" (click)="modal.dismiss(\'dismissed\')">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </div>\n    <div class="modal-body">\n      <p><strong>Please fill all details below</strong></p>\n\n\n      \x3c!-- Title --\x3e\n      <div class="form-group">\n        <label for="title">Title</label>\n        <input type="text" class="form-control" name="title" [(ngModel)]="model.title" #title="ngModel" [ngClass]="{ \'is-invalid\': f.submitted && title.invalid }" maxlength="48" required />\n        <div *ngIf="f.submitted && title.invalid" class="invalid-feedback">\n          <div *ngIf="title.errors.required">Title is required</div>\n        </div>\n      </div>\n\n      \x3c!-- Body --\x3e\n      <div class="form-group">\n        <label for="body">Body</label>\n        <textarea  rows="3" class="form-control" name="body" [(ngModel)]="model.body" #body="ngModel" [ngClass]="{ \'is-invalid\': f.submitted && body.invalid }" maxlength="255" required></textarea>\n        <div *ngIf="f.submitted && body.invalid" class="invalid-feedback">\n          <div *ngIf="body.errors.required">Body is required</div>\n        </div>\n      </div>\n\n    </div>\n    <div class="modal-footer">\n      \x3c!-- Cancel --\x3e\n      <button type="button" class="btn btn-outline-secondary" (click)="modal.dismiss(\'cancel click\')">Cancel</button>\n      \x3c!-- Submit --\x3e\n      <button type="submit" class="btn btn-primary">Create</button>\n\n    </div>\n  </form>\n</ng-template>\n'}]}],t.ctorParameters=function(){return[{type:y},{type:r.NgbModal}]},t.propDecorators={created:[{type:l.Output}]},t}(),w=function(){function t(t,e){this.postsService=t,this.modalService=e,this.deleted=new l.EventEmitter,this.deleting=!1}return t.prototype.deleteItem=function(){var e=this,t=new f(this.model.id);this.postsService["delete"](t).subscribe(function(t){t.id===e.model.id?(console.log("Invoking delete post item request completed sucessfully."),e.deleted.emit(e.model)):console.log("Invoking delete post item request completed with error.")},function(t){console.log("Invoking delete post item request encountered  an error. "+t+".")},function(){e.deleting=!1,console.log("Completed Invoking delete post item request.")})},t.prototype.confirm=function(t){var e=this;this.modalService.open(t).result.then(function(t){console.log("Confirmation modal approved with "+t+"."),e.deleting=!0,e.deleteItem()},function(t){console.log("Confirmation modal closed with "+t+".")})},t.decorators=[{type:l.Component,args:[{selector:"post-item-delete",template:'<button class="btn btn-danger m-3" (click)="confirm(confirmation)" [disabled]="deleting"><i *ngIf="deleting" class="fa fa-spinner fa-spin"></i>&nbsp; <i class="fas fa-trash-alt"></i> Delete</button>\n\n\n\x3c!-- Confirmation Modal --\x3e\n<ng-template #confirmation let-modal>\n  <div class="modal-header">\n    <h4 class="modal-title" id="confirmation-modal">\n      <i class="fa fa-exclamation-triangle"></i>\n      Post Deletion\n    </h4>\n    <button type="button" class="close" aria-label="Close" (click)="modal.dismiss(\'dismissed\')">\n      <span aria-hidden="true">&times;</span>\n    </button>\n  </div>\n  <div class="modal-body">\n    <p><strong>Are you sure you want to delete <span class="text-primary">"{{model.title }}"</span> post?</strong></p>\n    <p>\n      This post will be deleted and would no longer be available.\n      <span class="text-danger d-block">This operation is irreversible!</span>\n    </p>\n  </div>\n  <div class="modal-footer">\n    <button type="button" class="btn btn-outline-secondary" (click)="modal.dismiss(\'cancel click\')">Cancel</button>\n    <button type="button" class="btn btn-danger" (click)="modal.close(\'Ok click\')">Ok</button>\n\n  </div>\n\n</ng-template>\n'}]}],t.ctorParameters=function(){return[{type:y},{type:r.NgbModal}]},t.propDecorators={model:[{type:l.Input}],deleted:[{type:l.Output}]},t}(),k=function(){function t(t,e){this.postsService=t,this.modalService=e,this["delete"]=new l.EventEmitter,this.deleting=!1}return t.prototype.deleteItem=function(){var e=this,t=new f(this.model.id);this.postsService["delete"](t).subscribe(function(t){t.id===e.model.id?(console.log("Invoking delete post item request completed sucessfully."),e["delete"].emit(e.model)):console.log("Invoking delete post item request completed with error.")},function(t){console.log("Invoking delete post item request encountered  an error. "+t+".")},function(){console.log("Completed Invoking delete post item request.")})},t.prototype.confirm=function(t){var e=this;this.modalService.open(t).result.then(function(t){console.log("Confirmation modal approved with "+t+"."),e.deleting=!0,e.deleteItem()},function(t){console.log("Confirmation modal closed with "+t+".")})},t.decorators=[{type:l.Component,args:[{selector:"post-item",template:'<div class="card m-3">\n\n  <div class="card-body">\n    <h4 class="card-title">{{ model.title | uppercase}}</h4>\n\n    <p>{{ model.body }}</p>\n  </div>  \n</div>\n\r\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:y},{type:r.NgbModal}]},t.propDecorators={model:[{type:l.Input}],"delete":[{type:l.Output}]},t}(),q=function(){return(q=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},S=function(){function t(t,e){this.postsService=t,this.modalService=e,this.model={},this.updated=new l.EventEmitter,this.updating=!1}return t.prototype.ngOnInit=function(){this.model=q({},this.postItem)},t.prototype.updateItem=function(){var e=this;this.updating=!0;var n=new v(this.model);this.postsService.update(n).subscribe(function(t){t.postItem.id===n.postItem.id?(console.log("Invoking update post item request completed sucessfully."),e.updated.emit(e.model)):console.log("Invoking update post item request completed with error.")},function(t){console.log("Invoking update post item request encountered  an error. "+t+".")},function(){e.updating=!1,console.log("Completed Invoking update post item request.")})},t.prototype.open=function(t){this.modalService.open(t).result.then(function(t){console.log("Update modal approved with "+t+".")},function(t){console.log("Update modal closed with "+t+".")})},t.prototype.onSubmit=function(){this.updateItem(),this.modalService.dismissAll()},t.decorators=[{type:l.Component,args:[{selector:"post-item-update",template:'<button class="btn btn-primary m-3" (click)="open(update)" [disabled]="updating"><i *ngIf="updating" class="fa fa-spinner fa-spin"></i>&nbsp;<i class="fas fa-edit"></i> Edit </button>\n\n\x3c!-- Update Post Item Modal --\x3e\n<ng-template #update let-modal>\n  <form name="form" #f="ngForm" novalidate (ngSubmit)="onSubmit()">\n\n\n    <div class="modal-header">\n      <h4 class="modal-title" id="confirmation-modal">\n        <i class="far fa-newspaper"></i>\n\n        Post Update\n      </h4>\n      <button type="button" class="close" aria-label="Close" (click)="modal.dismiss(\'dismissed\')">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </div>\n    <div class="modal-body">\n      <p><strong>Please fill all details below</strong></p>\n\n      \x3c!-- Title --\x3e\n      <div class="form-group">\n        <label for="title">Title</label>\n        <input type="text" class="form-control" name="title" [(ngModel)]="model.title" #title="ngModel" [ngClass]="{ \'is-invalid\': f.submitted && title.invalid }" maxlength="48" required />\n        <div *ngIf="f.submitted && title.invalid" class="invalid-feedback">\n          <div *ngIf="title.errors.required">Title is required</div>\n        </div>\n      </div>\n\n      \x3c!-- Body --\x3e\n      <div class="form-group">\n        <label for="body">Body</label>\n        <textarea  rows="3" class="form-control" name="body" [(ngModel)]="model.body" #body="ngModel" [ngClass]="{ \'is-invalid\': f.submitted && body.invalid }" maxlength="255" required></textarea>\n        <div *ngIf="f.submitted && body.invalid" class="invalid-feedback">\n          <div *ngIf="body.errors.required">Body is required</div>\n        </div>\n      </div>\n\n    </div>\n    <div class="modal-footer">\n      \x3c!-- Cancel --\x3e\n      <button type="button" class="btn btn-outline-secondary" (click)="modal.dismiss(\'cancel click\')">Cancel</button>\n      \x3c!-- Submit --\x3e\n      <button type="submit" class="btn btn-primary">Update</button>\n\n    </div>\n  </form>\n</ng-template>\n'}]}],t.ctorParameters=function(){return[{type:y},{type:r.NgbModal}]},t.propDecorators={postItem:[{type:l.Input}],updated:[{type:l.Output}]},t}(),M=[{path:"posts",component:c,children:[{path:"",component:x},{path:"home",component:x}]}],P=function(){function t(){}return t.decorators=[{type:l.NgModule,args:[{imports:[a.RouterModule.forRoot(M)],exports:[a.RouterModule]}]}],t}(),E=function(){function t(){}return t.decorators=[{type:l.NgModule,args:[{declarations:[c,x,I,k,C,S,w],imports:[e.CommonModule,s.FormsModule,P,n.HttpClientModule,r.NgbModule.forRoot()],exports:[c,I],providers:[r.NgbActiveModal,y]}]}],t}();t.PostsComponent=c,t.TopComponent=I,t.PostsModule=E,t.ɵb=x,t.ɵd=C,t.ɵf=w,t.ɵc=k,t.ɵe=S,t.ɵg=P,t.ɵa=y,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=posts.umd.min.js.map