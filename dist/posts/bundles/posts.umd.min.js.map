{"version":3,"sources":["ng://posts/lib/posts.component.ts","ng://posts/lib/models/requests/get-posts-request.ts","ng://posts/lib/models/requests/create-post-request.ts","ng://posts/lib/models/requests/delete-post-request.ts","ng://posts/lib/models/requests/get-post-request.ts","ng://posts/lib/models/requests/update-post-request.ts","ng://posts/lib/services/posts.service.ts","ng://posts/lib/top/top.component.ts","ng://posts/lib/home/home.component.ts","ng://posts/lib/post-item/create/create.component.ts","ng://posts/lib/post-item/delete/delete.component.ts","ng://posts/lib/post-item/post-item.component.ts","node_modules/tslib/tslib.es6.js","ng://posts/lib/post-item/update/update.component.ts","ng://posts/lib/posts-routing.module.ts","ng://posts/lib/posts.module.ts"],"names":["PostsComponent","prototype","ngOnInit","Component","args","selector","template","GetPostsRequest","max","this","GetPostsResponse","items","CreatePostRequest","postItem","CreatePostResponse","id","DeletePostRequest","DeletePostResponse","GetPostResponse","item","UpdatePostRequest","UpdatePostResponse","PostsService","_httpClient","_this","request","get","actionUrl","pipe","map","slice","catchError","err","observableThrowError","create","post","response","update","put","delete","from","fetch","method","console","log","Injectable","HttpClient","TopComponent","postsService","getPosts","subscribe","postItems","error","HomeComponent","loading","event","unshift","findIndex","x","splice","indexOf","CreateComponent","modalService","EventEmitter","createItem","creating","model","created","emit","open","content","result","then","reason","onSubmit","dismissAll","NgbModal","Output","DeleteComponent","deleteItem","deleted","deleting","confirm","Input","PostItemComponent","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","UpdateComponent","updateItem","updating","updated","routes","path","component","children","NgModule","imports","RouterModule","forRoot","exports","PostsModule","declarations","CommonModule","FormsModule","PostsRoutingModule","HttpClientModule","NgbModule","providers","NgbActiveModal"],"mappings":"8pBAAA,IAAAA,EAAA,WASE,SAAAA,YAEAA,EAAAC,UAAAC,SAAA,iCATDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,QACVC,SAAA,gJAJF,GCKAC,EAME,SAAAA,EAAmBC,wBAAAC,KAAAD,IAAAA,GAMrBE,EAME,SAAAA,EAAmBC,GAAAF,KAAAE,MAAAA,GClBrBC,EAME,SAAAA,EAAmBC,GAAAJ,KAAAI,SAAAA,GAMrBC,EAME,SAAAA,EAAmBC,GAAAN,KAAAM,GAAAA,GCpBrBC,EAME,SAAAA,EAAmBD,GAAAN,KAAAM,GAAAA,GAMrBE,EAME,SAAAA,EAAmBF,GAAAN,KAAAM,GAAAA,GCJrBG,EAME,SAAAA,EAAmBC,GAAAV,KAAAU,KAAAA,GClBrBC,EAME,SAAAA,EAAmBP,GAAAJ,KAAAI,SAAAA,GAMrBQ,EAME,SAAAA,EAAmBR,GAAAJ,KAAAI,SAAAA,GCvBrBS,EAAA,WAiBE,SAAAA,EAAoBC,GAApB,IAAAC,EAAAf,KAAoBA,KAAAc,YAAAA,gBAQF,SAACE,GAEjB,OAAOD,EAAKD,YAAYG,IAAOF,EAAKG,UAAS,UAAUC,KACrDC,EAAAA,IAAI,SAAClB,GAGH,OAAO,IAAID,EAAiBC,EAAMmB,MAAM,EAAGL,EAAQjB,QAGrDuB,EAAAA,WAAW,SAAAC,GACT,OAAOC,EAAAA,WAAqBD,oBASjB,SAACP,GAGhB,OAAOD,EAAKD,YAAYG,IAAOF,EAAKG,UAAS,UAAUF,EAAQV,IAAMa,KACnEC,EAAAA,IAAI,SAACV,GAGH,OAAO,IAAID,EAAgBC,KAG7BY,EAAAA,WAAW,SAAAC,GACT,OAAOC,EAAAA,WAAqBD,OApChCvB,KAAKkB,UAAY,8CA4CnBL,EAAArB,UAAAiC,OAAA,SAAOT,GAGL,OAAOhB,KAAKc,YAAYY,KAAQ1B,KAAKkB,UAAS,UAAWF,GAASG,KAChEC,EAAAA,IAAI,SAACO,GAEH,OAAO,IAAItB,EAAmBsB,EAASrB,MAGzCgB,EAAAA,WAAW,SAAAC,GACT,OAAOC,EAAAA,WAAqBD,OASlCV,EAAArB,UAAAoC,OAAA,SAAOZ,GAGL,OAAOhB,KAAKc,YAAYe,IAAO7B,KAAKkB,UAAS,UAAUF,EAAQZ,SAASE,GAAMU,EAAQZ,UAAUe,KAC9FC,EAAAA,IAAI,SAACO,GAEH,OAAO,IAAIf,EAAmBe,KAGhCL,EAAAA,WAAW,SAAAC,GACT,OAAOC,EAAAA,WAAqBD,OAQlCV,EAAArB,UAAAsC,UAAA,SAAOd,GAGL,OAAOe,EAAAA,KAAKC,MAAShC,KAAKkB,UAAS,UAAUF,EAAQV,GAAM,CACzD2B,OAAQ,YAEPd,KACCC,EAAAA,IAAI,SAACO,GAGH,OAFAO,QAAQC,IAAIR,GAEL,IAAInB,EAAmBQ,EAAQV,MAExCgB,EAAAA,WAAW,SAAAC,GACT,OAAOC,EAAAA,WAAqBD,2BAtGrCa,EAAAA,sDAXQC,EAAAA,gBAAT,GCAAC,EAAA,WAcE,SAAAA,EAAoBC,GAAAvC,KAAAuC,aAAAA,SAGpBD,EAAA9C,UAAAC,SAAA,WAAA,IAAAsB,EAAAf,KAGQgB,EAAU,IAAIlB,EAAgB,IAGpCE,KAAKuC,aAAaC,SAASxB,GACxByB,UAAU,SAACd,GAGVZ,EAAK2B,UAAYf,EAASzB,OAE1B,SAACyC,GAECT,QAAQC,IAAI,yDAAyDQ,EAAK,MAE5E,WACET,QAAQC,IAAI,oEA7BrBzC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAA,wPAJOgB,OAHT,GCAA+B,EAAA,WAkBE,SAAAA,EAAoBL,GAAAvC,KAAAuC,aAAAA,SAGpBK,EAAApD,UAAAC,SAAA,WAAA,IAAAsB,EAAAf,KAGQgB,EAAU,IAAIlB,EAAgB,IAGpCE,KAAK6C,SAAU,EAGf7C,KAAKuC,aAAaC,SAASxB,GACxByB,UAAU,SAACd,GAGVZ,EAAK2B,UAAYf,EAASzB,OAE1B,SAACyC,GAECT,QAAQC,IAAI,qDAAqDQ,EAAK,MAExE,WAEE5B,EAAK8B,SAAU,EAEfX,QAAQC,IAAI,4CAQpBS,EAAApD,UAAAiC,OAAA,SAAOqB,GAEL9C,KAAK0C,UAAUK,QAAQD,IAQzBF,EAAApD,UAAAoC,OAAA,SAAOkB,GAEL9C,KAAK0C,UAAU1C,KAAK0C,UAAUM,UAAU,SAAAC,GAAK,OAAAA,EAAE3C,KAAOwC,EAAMxC,MAAOwC,GAOrEF,EAAApD,UAAAsC,UAAA,SAAOgB,GAEL9C,KAAK0C,UAAUQ,OAAOlD,KAAK0C,UAAUS,QAAQL,GAAQ,wBApExDpD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,SAAA,s4BANOgB,OADT,GCAAuC,EAAA,WAuBE,SAAAA,EAAoBb,EAAoCc,GAApCrD,KAAAuC,aAAAA,EAAoCvC,KAAAqD,aAAAA,6BALtB,IAAIC,EAAAA,4BAG3B,SAOJF,EAAA5D,UAAA+D,iCAGLvD,KAAKwD,UAAW,EAGhB,IAAMxC,EAAU,IAAIb,EAAkBH,KAAKyD,OAG3CzD,KAAKuC,aAAad,OAAOT,GACtByB,UAAU,SAACd,GAEQ,EAAdA,EAASrB,IAEX4B,QAAQC,IAAI,4DAGZpB,EAAK2C,QAAQC,KAAK5C,EAAK0C,QAGvBvB,QAAQC,IAAI,4DAGd,SAACQ,GACCT,QAAQC,IAAI,4DAA4DQ,EAAK,MAE/E,WAEE5B,EAAKyC,UAAW,EAEhBtB,QAAQC,IAAI,mDASpBiB,EAAA5D,UAAAoE,KAAA,SAAKC,GAGH7D,KAAKqD,aAAaO,KAAKC,GAASC,OAAOC,KAAK,SAACD,GAG3C5B,QAAQC,IAAI,gCAAgC2B,EAAM,MAEjD,SAACE,GAEF9B,QAAQC,IAAI,8BAA8B6B,EAAM,QASpDZ,EAAA5D,UAAAyE,SAAA,WAGEjE,KAAKuD,aAGLvD,KAAKqD,aAAaa,kCArFrBxE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAA,ojEALOgB,SAHAsD,EAAAA,6CAgBNC,EAAAA,YAjBH,GCAAC,EAAA,WAuBE,SAAAA,EAAoB9B,EAAoCc,GAApCrD,KAAAuC,aAAAA,EAAoCvC,KAAAqD,aAAAA,eALtB,IAAIC,EAAAA,4BAG3B,SAOJe,EAAA7E,UAAA8E,iCAGCtD,EAAU,IAAIT,EAAkBP,KAAKyD,MAAMnD,IAGjDN,KAAKuC,aAAaT,UAAOd,GACtByB,UAAU,SAACd,GAENA,EAASrB,KAAOS,EAAK0C,MAAMnD,IAE7B4B,QAAQC,IAAI,4DAGZpB,EAAKwD,QAAQZ,KAAK5C,EAAK0C,QAGvBvB,QAAQC,IAAI,4DAId,SAACQ,GAGCT,QAAQC,IAAI,4DAA4DQ,EAAK,MAE/E,WAEE5B,EAAKyD,UAAW,EAEhBtC,QAAQC,IAAI,mDASpBkC,EAAA7E,UAAAiF,QAAA,SAAQZ,GAAR,IAAA9C,EAAAf,KAGEA,KAAKqD,aAAaO,KAAKC,GAASC,OAAOC,KAAK,SAACD,GAG3C5B,QAAQC,IAAI,oCAAoC2B,EAAM,KAGtD/C,EAAKyD,UAAW,EAGhBzD,EAAKuD,cAEJ,SAACN,GAEA9B,QAAQC,IAAI,kCAAkC6B,EAAM,4BA5E3DtE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAA,ivCALOgB,SAHAsD,EAAAA,2CAaNO,EAAAA,uBAGAN,EAAAA,YAjBH,GCAAO,EAAA,WAsBE,SAAAA,EAAoBpC,EAAoCc,GAApCrD,KAAAuC,aAAAA,EAAoCvC,KAAAqD,aAAAA,iBAHvB,IAAIC,EAAAA,4BAE1B,SAMJqB,EAAAnF,UAAA8E,iCAGCtD,EAAU,IAAIT,EAAkBP,KAAKyD,MAAMnD,IAGjDN,KAAKuC,aAAaT,UAAOd,GACtByB,UAAU,SAACd,GAENA,EAASrB,KAAOS,EAAK0C,MAAMnD,IAE7B4B,QAAQC,IAAI,4DACZpB,EAAKe,UAAO6B,KAAK5C,EAAK0C,QAGtBvB,QAAQC,IAAI,4DAId,SAACQ,GAGCT,QAAQC,IAAI,4DAA4DQ,EAAK,MAE/E,WACET,QAAQC,IAAI,mDASpBwC,EAAAnF,UAAAiF,QAAA,SAAQZ,GAAR,IAAA9C,EAAAf,KAGEA,KAAKqD,aAAaO,KAAKC,GAASC,OAAOC,KAAK,SAACD,GAG3C5B,QAAQC,IAAI,oCAAoC2B,EAAM,KAEtD/C,EAAKyD,UAAW,EAEhBzD,EAAKuD,cAEJ,SAACN,GAGA9B,QAAQC,IAAI,kCAAkC6B,EAAM,4BArE3DtE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAA,sOAPOgB,SAGAsD,EAAAA,2CAUNO,EAAAA,wBAGAN,EAAAA,YAlBH,GC6BWQ,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOrF,UAAU8F,eAAeC,KAAKP,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKS,MAAMxF,KAAMmF,yBCZ9B,SAAAM,EAAoBlD,EAAoCc,GAApCrD,KAAAuC,aAAAA,EAAoCvC,KAAAqD,aAAAA,6BALtB,IAAIC,EAAAA,4BAG3B,SAIXmC,EAAAjG,UAAAC,SAAA,WACEO,KAAKyD,MAAKmB,EAAA,GAAQ5E,KAAKI,WAMlBqF,EAAAjG,UAAAkG,iCAGL1F,KAAK2F,UAAW,EAGhB,IAAM3E,EAAU,IAAIL,EAAkBX,KAAKyD,OAG3CzD,KAAKuC,aAAaX,OAAOZ,GACtByB,UAAU,SAACd,GAENA,EAASvB,SAASE,KAAOU,EAAQZ,SAASE,IAE5C4B,QAAQC,IAAI,4DAGZpB,EAAK6E,QAAQjC,KAAK5C,EAAK0C,QAGvBvB,QAAQC,IAAI,4DAGd,SAACQ,GACCT,QAAQC,IAAI,4DAA4DQ,EAAK,MAE/E,WAEE5B,EAAK4E,UAAW,EAEhBzD,QAAQC,IAAI,mDASpBsD,EAAAjG,UAAAoE,KAAA,SAAKC,GAGH7D,KAAKqD,aAAaO,KAAKC,GAASC,OAAOC,KAAK,SAACD,GAG3C5B,QAAQC,IAAI,8BAA8B2B,EAAM,MAE/C,SAACE,GAEF9B,QAAQC,IAAI,4BAA4B6B,EAAM,QASlDyB,EAAAjG,UAAAyE,SAAA,WAGEjE,KAAK0F,aAGL1F,KAAKqD,aAAaa,kCA3FrBxE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAA,qjEALOgB,SAHAsD,EAAAA,8CAaNO,EAAAA,uBAKAN,EAAAA,eCbGyB,EAAiB,CACrB,CACEC,KAAM,QAASC,UAAWxG,EAAgByG,SAAU,CAClD,CAACF,KAAM,GAAIC,UAAWnD,GACtB,CAACkD,KAAM,OAAQC,UAAWnD,4DAK/BqD,EAAAA,SAAQtG,KAAA,CAAC,CACRuG,QAAS,CACPC,EAAAA,aAAaC,QAAQP,IAEvBQ,QAAS,CACPF,EAAAA,uBCpBJG,EAAA,oDAeCL,EAAAA,SAAQtG,KAAA,CAAC,CACR4G,aAAc,CACZhH,EACAqD,EACAN,EACAqC,EACAvB,EACAqC,EACApB,GAEF6B,QAAS,CACPM,EAAAA,aACAC,EAAAA,YACAC,EACAC,EAAAA,iBACAC,EAAAA,UAAUR,WAEZC,QAAS,CACP9G,EACA+C,GACFuE,UAAW,CACTC,EAAAA,eACAjG,SArCJ","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'posts',\n  templateUrl: './posts.component.html',\n  styles: []\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The get posts request model.\r\n * */\r\nexport class GetPostsRequest {\r\n\r\n  /**\r\n  *  Initializes a new instance of the GetPostsRequest class.\r\n  * @param max The max items to retrieve.\r\n  */\r\n  constructor(public max: number = 9999) { }\r\n}\r\n\r\n/**\r\n *  The get posts response model.\r\n * */\r\nexport class GetPostsResponse {\r\n\r\n  /**\r\n   *  Initializes a new instance of the GetPostsResponse class.\r\n   * @param items The retrieved post items.\r\n   */\r\n  constructor(public items: PostItem[]) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The create post request model.\r\n * */\r\nexport class CreatePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the CreatePostRequest class.\r\n   * @param postItem The post item to be created.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n\r\n/**\r\n *  The create post response model.\r\n * */\r\nexport class CreatePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the CreatePostResponse class.\r\n   * @param id The id of newly created post item.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n","/**\r\n *  The delete post request model.\r\n * */\r\nexport class DeletePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the DeletePostRequest class.\r\n   * @param id The id of the post item to be deleted.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n\r\n/**\r\n *  The delete post response model.\r\n * */\r\nexport class DeletePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the DeletePostResponse class.\r\n   * @param id The id of the deleted post item.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The get post request model.\r\n * */\r\nexport class GetPostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the GetPostRequest class.\r\n   * @param id The id of the post item to be retrieved.\r\n   */\r\n  constructor(public id: number) { }\r\n}\r\n\r\n/**\r\n *  The get post response model.\r\n * */\r\nexport class GetPostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the GetPostResponse class.\r\n   * @param item The retrieved post item.\r\n   */\r\n  constructor(public item: PostItem) { }\r\n}\r\n","import { PostItem } from \"../interfaces/post-item\";\r\n\r\n/**\r\n *  The update post request model.\r\n * */\r\nexport class UpdatePostRequest {\r\n\r\n  /**\r\n   *  Initializes a new instance of the UpdatePostRequest class.\r\n   * @param postItem The post item to be updated.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n\r\n/**\r\n *  The delete post response model.\r\n * */\r\nexport class UpdatePostResponse {\r\n\r\n  /**\r\n   * Initializes a new instance of the DeletePostResponse class.\r\n   * @param postItem The updated post item.\r\n   */\r\n  constructor(public postItem: PostItem) { }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { PostItem } from \"../models/interfaces/post-item\";\r\nimport { CreatePostRequest, CreatePostResponse } from \"../models/requests/create-post-request\";\r\nimport { DeletePostRequest, DeletePostResponse } from \"../models/requests/delete-post-request\";\r\nimport { GetPostRequest, GetPostResponse } from \"../models/requests/get-post-request\";\r\nimport { GetPostsRequest, GetPostsResponse } from \"../models/requests/get-posts-request\";\r\nimport { UpdatePostRequest, UpdatePostResponse } from \"../models/requests/update-post-request\";\r\n\n@Injectable()\nexport class PostsService {\n\n  // The API base url.\n  private actionUrl: string;\n\n  constructor(private _httpClient: HttpClient) {\n    // Set the API url.\n    this.actionUrl = 'https://jsonplaceholder.typicode.com';\n  }\n\n  /**\r\n   * Get all post items.\r\n   */\n  public getPosts = (request: GetPostsRequest): Observable<GetPostsResponse> => {\n\n    return this._httpClient.get(`${this.actionUrl}/posts`).pipe(\n      map((items: PostItem[]) => {\r\n\r\n        // Create and return a response with the returned items.\r\n        return new GetPostsResponse(items.slice(0, request.max));\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\n  }\n\n\n  /**\n   *  Get a specified post item.\n   * @param request The request data.\n   */\n  public getPost = (request: GetPostRequest): Observable<GetPostResponse> => {\n\n    // Invoke a get request.\n    return this._httpClient.get(`${this.actionUrl}/posts/${request.id}`).pipe(\n      map((item: PostItem) => {\r\n\r\n        // Create and return response with the returned item.\r\n        return new GetPostResponse(item);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\n  }\n\n  /**\r\n   * Create a new  post item.\r\n  * @param request The request data.\r\n   */\r\n  create(request: CreatePostRequest): Observable<CreatePostResponse> {\r\n\r\n    // Invoke a post request.\n    return this._httpClient.post(`${this.actionUrl}/posts/`, request).pipe(\n      map((response: any) => {\r\n        // Create and return response with the created item id.\r\n        return new CreatePostResponse(response.id);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\r\n  }\n\n\n  /**\r\n * Updates a post item.\r\n* @param request The request data.\r\n */\r\n  update(request: UpdatePostRequest): Observable<UpdatePostResponse> {\r\n\r\n    // Invoke a put request.\n    return this._httpClient.put(`${this.actionUrl}/posts/${request.postItem.id}`, request.postItem).pipe(\n      map((response: PostItem) => {\r\n        // Create and return response with the created item id.\r\n        return new UpdatePostResponse(response);\r\n\r\n      }),\n      catchError(err => {\r\n        return observableThrowError(err);\r\n      }));\r\n  }\n\r\n  /**\r\n   * Deletes a post item.\r\n  * @param request The request data.\r\n   */\r\n  delete(request: DeletePostRequest): Observable<DeletePostResponse> {\r\n\r\n    // Invoke a delete request.\r\n    return from(fetch(`${this.actionUrl}/posts/${request.id}`, {\r\n      method: 'DELETE'\r\n    }))\r\n      .pipe(\n        map((response) => {\r\n          console.log(response);\r\n          // Create and return response with the returned item.\r\n          return new DeletePostResponse(request.id);\r\n        }),\n        catchError(err => {\r\n          return observableThrowError(err);\r\n        }));\r\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { GetPostsRequest } from '../models/requests/get-posts-request';\r\nimport { PostsService } from '../services/posts.service';\r\n\n@Component({\n  selector: 'posts-top',\n  templateUrl: './top.component.html'\n})\nexport class TopComponent implements OnInit {\n\n  // The post items to show.\n  postItems: PostItem[];\n\n  constructor(private postsService: PostsService) { }\n\n\n  ngOnInit() {\r\n\n    // Create get posts request.\n    const request = new GetPostsRequest(10);\r\n\r\n    // Call the service and retrieve posts.\r\n    this.postsService.getPosts(request)\n      .subscribe((response) => {\n\n        // Set the items returned in the response.\n        this.postItems = response.items;\n      },\n        (error) => {\n\n          console.log(`Invoking get posts top request encountered  an error. ${error}.`);\n        },\n        () => {\n          console.log(`Completed invoking get posts top request.`);\n        });\r\n  }\r\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from '../services/posts.service';\r\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { GetPostsRequest } from '../models/requests/get-posts-request';\r\n\n@Component({\n  selector: 'posts-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  // Loading indication.\n  loading: boolean;\n\n  // The post items to show.\n  postItems: PostItem[];\n\n  constructor(private postsService: PostsService) { }\n\n\n  ngOnInit() {\r\n\n    // Create get posts request.\n    const request = new GetPostsRequest(50);\r\n\r\n    // Set loading state.\n    this.loading = true;\r\n\r\n    // Call the service and retrieve posts.\r\n    this.postsService.getPosts(request)\n      .subscribe((response) => {\n\n        // Set the items returned in the response.\n        this.postItems = response.items;\n      },\n        (error) => {\n\n          console.log(`Invoking get posts request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set loading state.\n          this.loading = false;\n\n          console.log(`Completed invoking get posts request.`);\n        });\r\n  }\r\n\r\n  /**\r\n  * Create the specified post item on view.\r\n  * @param event The triggered event containing the post item to create.\r\n  */\r\n  create(event: PostItem) {\r\n    // Add the item to top of the posts collection.\r\n    this.postItems.unshift(event);\r\n  }\r\n\r\n\r\n  /**\r\n  * Update the specified post item on view.\r\n  * @param event The triggered event containing the post item to update.\r\n  */\r\n  update(event: PostItem) {\r\n    // Update the item in the posts collection.    \r\n    this.postItems[this.postItems.findIndex(x => x.id === event.id)] = event;\r\n  }\r\n\r\n  /**\r\n   * Delete the specified post item from view.\r\n   * @param event The triggered event containing the post item to delete.\r\n   */\r\n  delete(event: PostItem) {\r\n    // Remove the item from the posts collection.\r\n    this.postItems.splice(this.postItems.indexOf(event), 1);\r\n  }\r\n\r\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { CreatePostRequest } from '../../models/requests/create-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-create',\n  templateUrl: './create.component.html'\n})\nexport class CreateComponent {\n\n  // The post item model.\n  model = {} as PostItem;\n\n  // An event emitter for post creation notification.\n  @Output()\r\n  created: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  creating = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Create the post item.\n   * */\n  public createItem() {\n\n    // Set the processing state.\r\n    this.creating = true;\n\n    // Create the request.\n    const request = new CreatePostRequest(this.model);\n\n    // Call the service.\n    this.postsService.create(request)\n      .subscribe((response) => {\n        // Check for successful response.        \n        if (response.id > 0) {\n\n          console.log(`Invoking create post item request completed sucessfully.`);\n\n          // Emit the created event.\n          this.created.emit(this.model);\n        }\n        else {\n          console.log(`Invoking create post item request completed with error.`);\n        }\n      },\n        (error) => {\n          console.log(`Invoking create post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.creating = false;\n\n          console.log(`Completed Invoking create post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open creation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  open(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Modal approved.\r\n      console.log(`Creation modal approved with ${result}.`)\r\n\r\n    }, (reason) => {\r\n      // Modal dismissed.\r\n      console.log(`Creation modal closed with ${reason}.`)\r\n\r\n      // Do nothing.\r\n    });\r\n  }\n\n  /**\n   * Submit the create new post item form.\n   * */\n  onSubmit() {\r\n\r\n    // Create post item.\r\n    this.createItem();\n\r\n    // Close open modals.\r\n    this.modalService.dismissAll();\n\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { DeletePostRequest } from '../../models/requests/delete-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-delete',\n  templateUrl: './delete.component.html'\n})\nexport class DeleteComponent {\n\n  // The post item model.\n  @Input() model: PostItem;\n\n  // An event emitter for post deletion notification.\n  @Output()\r\n  deleted: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  deleting = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Delete the post item.\n   * */\n  public deleteItem() {\n    \n    // Create the request.\n    const request = new DeletePostRequest(this.model.id);\n\n    // Call the service.\n    this.postsService.delete(request)\n      .subscribe((response) => {\n        // Check for successful response.\n        if (response.id === this.model.id) {\n\n          console.log(`Invoking delete post item request completed sucessfully.`);\n\n          // Emit the deleted event.\n          this.deleted.emit(this.model);\n        }\n        else {\n          console.log(`Invoking delete post item request completed with error.`);\n        }\n\n      },\n        (error) => {\n        \n\n          console.log(`Invoking delete post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.deleting = false;\n\n          console.log(`Completed Invoking delete post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open deletion confirmation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  confirm(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Confirmation approved.\r\n      console.log(`Confirmation modal approved with ${result}.`)\r\n\r\n      // Set the processing state.\r\n      this.deleting = true;\r\n\r\n      // Delete post item.\r\n      this.deleteItem();\r\n\r\n    }, (reason) => {\r\n        // Confirmation dismissed.\r\n        console.log(`Confirmation modal closed with ${reason}.`)\r\n\r\n        // Do nothing.\r\n    });\r\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { PostItem } from '../models/interfaces/post-item';\r\nimport { PostsService } from '../services/posts.service';\r\nimport { DeletePostRequest } from '../models/requests/delete-post-request';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\n@Component({\n  selector: 'post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.scss']\n})\nexport class PostItemComponent {\n\n  // The post item model.\n  @Input() model: PostItem;\n\n  // An event emitter for post deletion notification.\n  @Output()\r\n  delete: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  deleting = false;\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\n  /**\n   * Delete the post item.\n   * */\n  public deleteItem() {\n    \n    // Create the request.\n    const request = new DeletePostRequest(this.model.id);\n\n    // Call the service.\n    this.postsService.delete(request)\n      .subscribe((response) => {\n        // Check for successful response.\n        if (response.id === this.model.id) {\n\n          console.log(`Invoking delete post item request completed sucessfully.`);\n          this.delete.emit(this.model);\n        }\n        else {\n          console.log(`Invoking delete post item request completed with error.`);\n        }\n\n      },\n        (error) => {\n        \n\n          console.log(`Invoking delete post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          console.log(`Completed Invoking delete post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open deletion confirmation dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  confirm(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Confirmation approved.\r\n      console.log(`Confirmation modal approved with ${result}.`)\r\n\r\n      this.deleting = true;\r\n      // Delete post item.\r\n      this.deleteItem();\r\n\r\n    }, (reason) => {\r\n\r\n        // Confirmation dismissed.\r\n        console.log(`Confirmation modal closed with ${reason}.`)\r\n\r\n        // Do nothing.\r\n    });\r\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostItem } from '../../models/interfaces/post-item';\r\nimport { UpdatePostRequest } from '../../models/requests/update-post-request';\r\nimport { PostsService } from '../../services/posts.service';\r\n\r\n\n@Component({\n  selector: 'post-item-update',\n  templateUrl: './update.component.html'\n})\nexport class UpdateComponent implements OnInit {\n\n  // The post item model.\n  @Input() postItem: PostItem;\n\n  model = {} as PostItem;\n\n  // An event emitter for post creation notification.\n  @Output()\r\n  updated: EventEmitter<PostItem> = new EventEmitter<PostItem>();\n\n  // An indication for current processing state.\n  updating = false;\n\n  constructor(private postsService: PostsService, private modalService: NgbModal) { }\n\r\n  ngOnInit(): void {\r\n    this.model = { ...this.postItem};\r\n    }\r\n\n  /**\n   * Update the post item.\n   * */\n  public updateItem() {\n\n    // Set the processing state.\r\n    this.updating = true;\n\n    // Update the request.\n    const request = new UpdatePostRequest(this.model);\n\n    // Call the service.\n    this.postsService.update(request)\n      .subscribe((response) => {\n        // Check for successful response.        \n        if (response.postItem.id === request.postItem.id) {\n\n          console.log(`Invoking update post item request completed sucessfully.`);\n\n          // Emit the updated event.\n          this.updated.emit(this.model);\n        }\n        else {\n          console.log(`Invoking update post item request completed with error.`);\n        }\n      },\n        (error) => {\n          console.log(`Invoking update post item request encountered  an error. ${error}.`);\n        },\n        () => {\n          // Set the processing state.\r\n          this.updating = false;\n\n          console.log(`Completed Invoking update post item request.`);\n        });\n\n  }\n\n  /**\r\n   * Open update dialog modal.\r\n   * @param content The modal template to show.\r\n   */\n  open(content) {\r\n\r\n    // Call modal service and open the specfied template in a modal.\r\n    this.modalService.open(content).result.then((result) => {\r\n\r\n      // Modal approved.\r\n      console.log(`Update modal approved with ${result}.`)\r\n\r\n    }, (reason) => {\r\n      // Modal dismissed.\r\n      console.log(`Update modal closed with ${reason}.`)\r\n\r\n      // Do nothing.\r\n    });\r\n  }\n\n  /**\n   * Submit the update new post item form.\n   * */\n  onSubmit() {\r\n\r\n    // Update post item.\r\n    this.updateItem();\n\r\n    // Close open modals.\r\n    this.modalService.dismissAll();\n\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { PostItemComponent } from './post-item/post-item.component';\r\nimport { PostsComponent } from \"./posts.component\";\r\n\nconst routes: Routes = [\n  {\n    path: 'posts', component: PostsComponent, children: [\n      {path: '', component: HomeComponent},\n      {path: 'home', component: HomeComponent}\n    ]\n  },\n];\n\n@NgModule({\n  imports: [    \n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class PostsRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbActiveModal, NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreateComponent } from './post-item/create/create.component';\r\nimport { DeleteComponent } from './post-item/delete/delete.component';\r\nimport { PostItemComponent } from './post-item/post-item.component';\r\nimport { UpdateComponent } from './post-item/update/update.component';\r\nimport { PostsRoutingModule } from \"./posts-routing.module\";\r\nimport { PostsComponent } from './posts.component';\r\nimport { PostsService } from './services/posts.service';\r\nimport { TopComponent } from './top/top.component';\r\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    HomeComponent,\n    TopComponent,\n    PostItemComponent,\n    CreateComponent,\n    UpdateComponent,\n    DeleteComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PostsRoutingModule,\n    HttpClientModule,\n    NgbModule.forRoot()\n  ],\n  exports: [\n    PostsComponent,\n    TopComponent],\n  providers: [\n    NgbActiveModal,\n    PostsService\n  ]\n})\nexport class PostsModule { }\n"]}